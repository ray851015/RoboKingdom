{"version":3,"sources":["reportWebVitals.js","Card.js","Cardlist.js","SearchBox.js","Error.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","id","name","email","className","alt","src","Cardlist","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","ErrorBoundry","props","state","hasError","error","info","this","setState","children","Component","App","onSearchChange","event","searchfield","target","value","fetch","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","Error","ReactDOM","render","document","getElementById"],"mappings":"uLAYeA,G,KAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,mCCOCQ,EAZF,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,GAAGC,EAAgB,EAAhBA,KAAKC,EAAW,EAAXA,MAErB,OACE,sBAAKC,UAAU,sDAAf,UACE,qBAAKC,IAAI,SAASC,IAAG,+BAA0BL,EAA1B,cACrB,gCACE,6BAAKC,IACL,4BAAIC,WCWGI,EAjBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAClB,OACE,8BACGA,EAAOC,KAAI,SAACC,EAAMC,GACjB,OACE,cAAC,EAAD,CAEEV,GAAIO,EAAOG,GAAGV,GACdC,KAAMM,EAAOG,GAAGT,KAChBC,MAAOK,EAAOG,GAAGR,OAHZQ,SCMFC,G,MAZG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACnB,OACE,qBAAKT,UAAU,YAAf,SACE,uBACEA,UAAU,mBACVU,KAAK,SACLC,YAAY,sBACZC,SAAUH,QCWHI,G,wDAlBb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,UAAU,GAHK,E,qDAMnB,SAAkBC,EAAOC,GACvBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAG5B,WACE,OAAIG,KAAKJ,MAAMC,SACN,0DAEFG,KAAKL,MAAMO,a,GAfKC,cC4CZC,E,kDAtCb,aAAe,IAAD,8BACZ,gBAWFC,eAAiB,SAACC,GAChB,EAAKL,SAAS,CAAEM,YAAaD,EAAME,OAAOC,SAX1C,EAAKb,MAAQ,CACXX,OAAQ,GACRsB,YAAa,IAJH,E,qDAOd,WAAqB,IAAD,OAClBG,MAAM,8CACHvC,MAAK,SAACwC,GAAD,OAAcA,EAASC,UAC5BzC,MAAK,SAAC0C,GAAD,OAAW,EAAKZ,SAAS,CAAEhB,OAAQ4B,S,oBAK7C,WAAU,IAAD,OACDC,EAAiBd,KAAKJ,MAAMX,OAAO8B,QAAO,SAACC,GAC/C,OAAOA,EAAMrC,KACVsC,cACAC,SAAS,EAAKtB,MAAMW,YAAYU,kBAErC,OAAiC,IAA7BjB,KAAKJ,MAAMX,OAAOkC,OACb,yCAGL,sBAAKtC,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWS,aAAcU,KAAKK,iBAC9B,uBACA,cAACe,EAAD,UACE,cAAC,EAAD,CAAUnC,OAAQ6B,a,GA/BZX,aCDlBkB,IAASC,OACP,cAAC,EAAD,IAEAC,SAASC,eAAe,SAM1BxD,K","file":"static/js/main.34265353.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\n\r\nconst Card = ({id,name,email}) => {\r\n  //   const { name, email, id } = props; //也可以寫const Card = ({name,email,id})=>{return ()}\r\n  return (\r\n    <div className=\"tc bg-light-green dib br3 pd3 ma2 grow bw2 shadow-5\">\r\n      <img alt=\"robots\" src={`https://robohash.org/${id}?200*200`} />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nconst Cardlist = ({ robots }) => {\r\n  return (\r\n    <div>\r\n      {robots.map((user, i) => {\r\n        return (\r\n          <Card\r\n            key={i}\r\n            id={robots[i].id}\r\n            name={robots[i].name}\r\n            email={robots[i].email}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cardlist;\r\n","import React from \"react\";\r\nimport \"./SearchBox.css\";\r\n\r\nconst SearchBox = ({ searchChange }) => {\r\n  return (\r\n    <div className=\"searchBox\">\r\n      <input\r\n        className=\"searchBox__input\"\r\n        type=\"search\"\r\n        placeholder=\"type in robots name\"\r\n        onChange={searchChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default SearchBox;\r\n","import React, { Component } from \"react\";\r\n\r\nclass ErrorBoundry extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasError: false,\r\n    };\r\n  }\r\n  componentDidCatch(error, info) {\r\n    this.setState({ hasError: true });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <h1>Oooops.There's an error.</h1>;\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundry;\r\n","import React, { Component } from \"react\";\r\nimport Cardlist from \"./Cardlist\";\r\nimport SearchBox from \"./SearchBox\";\r\nimport \"./App.css\";\r\nimport \"./index.css\";\r\nimport ErrorBoundry from \"./Error\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      robots: [],\r\n      searchfield: \"\",\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then((response) => response.json())\r\n      .then((users) => this.setState({ robots: users }));\r\n  }\r\n  onSearchChange = (event) => {\r\n    this.setState({ searchfield: event.target.value });\r\n  };\r\n  render() {\r\n    const filteredRobots = this.state.robots.filter((robot) => {\r\n      return robot.name\r\n        .toLowerCase()\r\n        .includes(this.state.searchfield.toLowerCase());\r\n    });\r\n    if (this.state.robots.length === 0) {\r\n      return <h1>Loading</h1>;\r\n    } else {\r\n      return (\r\n        <div className=\"tc\">\r\n          <h1 className=\"f1\">RoboFriends</h1>\r\n          <SearchBox searchChange={this.onSearchChange} />\r\n          <hr />\r\n          <ErrorBoundry>\r\n            <Cardlist robots={filteredRobots} />\r\n          </ErrorBoundry>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <App />,\n\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}